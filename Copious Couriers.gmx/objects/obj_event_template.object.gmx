<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100003</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Object Pop up text 
TitleText = "Title Text";
ButtonOne = "Button 1 Text";
ButtonTwo = "Button 2 Text";
ButtonThree = "Button 3 Text";
ButtonFour = "Button 4 Text";
outcome = "Outcome Text";

// Put Object Logic in the Step Code!!

// ******************************************************************************************
// Object Operation
action = -1;
resolved = false;
generated = false;
x = 640 + sprite_width;
y = ob_mainLevel_control.grass_road_y + ob_mainLevel_control.hudSize;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.p_health&lt;=0)
{
    instance_destroy();
}
if (!instance_exists(obj_event_parent))
{
    //move object
    x-=global.scrollSpeed;
}
else
{
    for (i=1;i&lt;(global.event_options+1);i++)
    {
        if (button[i].pressed=1)
        {
            //checks what instance of the button has been pressed and stores result in variable
            action = i;
            instance_deactivate_object(obj_event_button);
            break;
        }
    }
    if (resolved = false)
    {
    switch (action)
    {
        case 1:
            {
                //top left button actions
                obj_event_parent.should_draw_options = false;
                obj_event_parent.should_draw_outcome = true;
                resolved = true;
                outcome = "Outcome 1";
                
                break;
            }
        case 2:
            {
                //top right button actions
                obj_event_parent.should_draw_options = false;
                obj_event_parent.should_draw_outcome = true;
                resolved = true;
                outcome = "Outcome 2";
                
                break;
            }
        case 3:
            {
                //bottom left button actions
                obj_event_parent.should_draw_options = false;
                obj_event_parent.should_draw_outcome = true;
                resolved = true;
                outcome = "Outcome 3";
                
                break;
            }
        case 4:
            {
                //bottom right button actions
                obj_event_parent.should_draw_options = false;
                obj_event_parent.should_draw_outcome = true;
                resolved = true;
                outcome = "Outcome 4";
                
                break;
            }
    }
    }
}

//destroy object
if (x==-sprite_width) {instance_destroy()}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_player_character">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//set the number of options there are for the player to chose from
global.event_options = 2;

if (generated = false)
{
    // Pause the game
    global.pause = true;
    
    instance_create(x,y,obj_event_dummy);
    obj_event_dummy.sprite_index = sprite_index;
    obj_event_dummy.depth = -350; // This is on the road
    sprite_index = -1;
    instance_create(room_width/2,room_height/2,obj_event_parent);
    
    if(instance_exists(obj_event_parent))
    {
        if ((obj_event_parent.should_draw_outcome = false))
        {
            obj_event_parent.should_draw_options = true;
            if (global.event_options&gt;=4)
            {
            button[1] = instance_create(obj_event_parent.x-133.13,obj_event_parent.y-15,obj_event_button);
            button[2] = instance_create(obj_event_parent.x+133.13,obj_event_parent.y-15,obj_event_button);
            button[3] = instance_create(obj_event_parent.x-133.13,obj_event_parent.y+64.33,obj_event_button);
            button[4] = instance_create(obj_event_parent.x+133.13,obj_event_parent.y+64.33,obj_event_button);
            }
            else
            {
            button[1] = instance_create(obj_event_parent.x-133.13,obj_event_parent.y+25,obj_event_button);
            button[2] = instance_create(obj_event_parent.x+133.13,obj_event_parent.y+25,obj_event_button);
            }
            generated = true;
            
            // Tell the event generator to generate another event is now possible
            ob_mainLevel_control.encountered = false;
            
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_event_parent))
{
    if ((obj_event_parent.should_draw_options = true)&amp;&amp;(obj_event_parent.should_draw_outcome = false))
    {
        draw_set_halign(fa_center);
        draw_set_valign(fa_center);
        draw_set_color(c_white);
        //title text
        //draw_text_transformed(obj_event_parent.x,obj_event_parent.y-85.27,TitleText,1,1,0);
        //button text
        draw_text_transformed(button[1].x,button[1].y,ButtonOne,1,1,0);
        draw_text_transformed(button[2].x,button[2].y,ButtonTwo,1,1,0);
        if (global.event_options&gt;2)
        {
        draw_text_transformed(button[3].x,button[3].y,ButtonThree,1,1,0);
        draw_text_transformed(button[4].x,button[4].y,ButtonFour,1,1,0);
        draw_text_transformed(obj_event_parent.x,obj_event_parent.y-85.27,TitleText,1,1,0);
        }
        else
        {
        draw_text_transformed(obj_event_parent.x,obj_event_parent.y-45.27,TitleText,1,1,0);
        }
        draw_set_valign(fa_top);
    }
    else if (obj_event_parent.should_draw_outcome = true)
    {
        draw_set_halign(fa_center);
        draw_set_valign(fa_center);
        draw_text_transformed(obj_event_parent.x,obj_event_parent.y,outcome,1,1,0);
        draw_set_valign(fa_top);
    }
}
else if (generated = false)
{
    draw_self()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
