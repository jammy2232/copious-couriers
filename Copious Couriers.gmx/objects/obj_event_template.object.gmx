<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_forest_tree</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100003</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>should_draw_optionsl = false;
should_draw_outcomel = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(obj_event_parent))
{
    x=x-1;
}
else
{
    switch (obj_event_parent.pressed)
    {
        case 1:
            {
                //top left button actions
                obj_event_parent.should_draw_options = false;
            }
        case 2:
            {
                //top right button actions
                obj_event_parent.should_draw_options = false;
            }
        case 3:
            {
                //bottom left button actions
                obj_event_parent.should_draw_options = false;
            }
        case 4:
            {
                //bottom right button actions
                obj_event_parent.should_draw_options = false;
            }
    }
}

//temp test
if (x==-32) {x=680;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_wagon_wagon">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//set the number of options there are for the player to chose from
global.event_options = 4;
instance_create(room_width/2,room_height/2,obj_event_parent);
if(instance_exists(obj_event_parent))
{
    if (should_draw_outcomel = false)
    {
        should_draw_optionsl = true;
        
        instance_create(obj_event_parent.x-133.13,obj_event_parent.y-15,obj_event_button1);
        instance_create(obj_event_parent.x+133.13,obj_event_parent.y-15,obj_event_button2);
        instance_create(obj_event_parent.x-133.13,obj_event_parent.y+64.33,obj_event_button3);
        instance_create(obj_event_parent.x+133.13,obj_event_parent.y+64.33,obj_event_button4);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (instance_exists(obj_event_parent))
{
    if ((obj_event_parent.should_draw_options = true)&amp;&amp;(obj_event_parentshould_draw_outcome = false))
    {
        draw_set_halign(fa_center);
        draw_set_valign(fa_center);
        draw_set_color(c_white);
        //title text
        draw_text_transformed(obj_event_parent.x,obj_event_parent.y-85.27,"TitleText",1,1,0);
        //button text
        draw_text_transformed(obj_event_parent.x-133.13,obj_event_parent.y-15,"ButtonText",1,1,0);
        draw_text_transformed(obj_event_parent.x+133.13,obj_event_parent.y-15,"ButtonText",1,1,0);
        if (global.event_options&gt;2)
        {
        draw_text_transformed(obj_event_parent.x-133.13,obj_event_parent.y+64.33,"ButtonText",1,1,0);
        draw_text_transformed(obj_event_parent.x+133.13,obj_event_parent.y+64.33,"ButtonText",1,1,0);
        }
    }
    else if (obj_event_parent.should_draw_outcome = true)
    {
        draw_text_transformed(obj_event_parent.x,obj_event_parent.y-85.27,"OutcomeText",1,1,0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
