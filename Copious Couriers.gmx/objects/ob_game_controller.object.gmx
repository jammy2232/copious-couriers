<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>endtimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Dealing with hunger and health
if(ob_mainLevel_control.step%ob_mainLevel_control.screenWidth == 0)
{
    if(global.hunger &gt; 0)
    {
    global.hunger--;
    }
    else
    {
    global.p_health -= 5;
    }
} 

// death
if(global.p_health &lt; 1)
    {
    // put bad stuff here.
    
    // record the death
    global.prevdeaths[global.saveindex,0] = global.pdistance;
    global.prevdeaths[global.saveindex,1] = global.plaName;
    
    // check and increment the save index
    if (global.saveindex &lt; 100)
    {
        global.saveindex++;
    }
    else
    {
        global.saveindex = 0;
    }
    
    endscreen = instance_create(320,240,ob_endgame_screen);
    endscreen.text = "You Died";
    global.pause = true;  
 
}

// graves for effecrt
for(index = 0; index &lt; 100; index++)
{
    if(global.pdistance == (global.prevdeaths[index,0]-ob_mainLevel_control.screenWidth) &amp;&amp; global.prevdeaths[index,0] != -1)
    {
         current_tob = instance_create(650,293+60, ob_grave); // make sure it's in front of everything
         current_tob.text = global.prevdeaths[index,1];
    }
}
    
// End of the game
if(global.pdistance &gt; global.enddistance)
{
    global.endevent = true;
       
    if (endtimer == 300)
    {
    inst = instance_create(740,350, ob_endgame);
    // instance of the end of the game ect here.
    }

    if (endtimer &lt; 302)
    {
     endtimer++;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
